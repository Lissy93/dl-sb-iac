name: 🚀 Deploy to Supabase

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
        - environment: dev
          project_id: domain-locker-dev
          config_file: supabase/config.dev.toml
          secrets_prefix: DEV
        - environment: demo
          project_id: domain-locker-demo
          config_file: supabase/config.demo.toml
          secrets_prefix: DEMO

    env:
      SUPABASE_PROJECT_ID: ${{ secrets[format('SUPABASE_PROJECT_ID_{0}', matrix.secrets_prefix)] }}
      SUPABASE_ACCESS_TOKEN: ${{ secrets[format('SUPABASE_ACCESS_TOKEN', matrix.secrets_prefix)] }}
      SUPABASE_DB_PASSWORD: ${{ secrets[format('SUPABASE_DB_PASSWORD_{0}', matrix.secrets_prefix)] }}
      SUPABASE_ENV_FILE: ${{ secrets[format('SUPABASE_ENV_FILE_{0}', matrix.secrets_prefix)] }}
      CONFIG_FILE: supabase/config.${{ matrix.environment }}.toml

    steps:
      - name: 🛎️ Check out code
        uses: actions/checkout@v3

      - name: 🚦 Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with: { version: latest }

      - name: 🔑 Supabase Login
        run: supabase login --token "$SUPABASE_ACCESS_TOKEN"

      - name: 🔗 Link Supabase Project
        run: supabase link --project-ref "$SUPABASE_PROJECT_ID"

      - name: 📃 Supabase Init (first-time only)
        run: supabase db init || echo "Already initialized"

      - name: 🔧 Push Config to Supabase
        run: supabase config push --file "$CONFIG_FILE"

      - name: 🗃️ Apply DB Migrations
        run: yes | supabase db push

      - name: 🔐 Set Secrets
        run: |
          echo "$SUPABASE_ENV_FILE" > .env
          supabase secrets set --env-file=.env

      - name: 🛫 Deploy Edge Functions
        run: supabase functions deploy --no-verify-jwt --project-ref "$SUPABASE_PROJECT_ID"
